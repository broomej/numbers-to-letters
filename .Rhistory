?t.test
t.test(b$len, c$len)
t.test(b$len, a$len)
t.test(c$len, b$len)
b <- data.frame()
dim(b) <- c(0, 2)
for(i in c(0.5, 1.0, 2.0)) {
a <- ToothGrowth[ToothGrowth$dose == i, ]
b <- rbind(b, t.test(a$len)$conf.int[1:2])
}
colnames(b) <- c(".025", "0.975")
rownames(b) <- c("dose==0.5", "dose==1", "dose==2")
b
View(a)
View(b)
View(a)
a[,1]
a[,1:3]
a <- ToothGrowth[ToothGrowth$dose == 0.5, ]
b <- ToothGrowth[ToothGrowth$dose == 1, ]
c <- ToothGrowth[ToothGrowth$dose == 2, ]
t.test(a[a$dose == OJ, 1], a[a$dose == VC, 1])
t.test(a[a$dose == "OJ", 1], a[a$dose == "VC", 1])
t.test(a[a$dose == "OJ", 1], a[a$dose == "VC", 1], paired = FALSE)
a[a$dose == "OJ", 1]
a[a$dose == OJ, 1]
View(a)
t.test(a[a$supp == "OJ", 1], a[a$supp == "VC", 1], paired = FALSE)
str(t.test(a[a$supp == "OJ", 1], a[a$supp == "VC", 1], paired = FALSE))
t.test(a[a$supp == "OJ", 1], a[a$supp == "VC", 1], paired = FALSE)$conf.int
t.test(a[a$supp == "OJ", 1], a[a$supp == "VC", 1], paired = FALSE)$conf.int[1,]
t.test(a[a$supp == "OJ", 1], a[a$supp == "VC", 1], paired = FALSE)$conf.int[,1]
t.test(a[a$supp == "OJ", 1], a[a$supp == "VC", 1], paired = FALSE)$conf.int[1]
t.test(a[a$supp == "OJ", 1], a[a$supp == "VC", 1], paired = FALSE)$conf.int[1:3]
t.test(a[a$supp == "OJ", 1], a[a$supp == "VC", 1], paired = FALSE)$conf.int[1:2]
for(i in c(a, b, c) {
t.test(i[i$supp == "OJ", 1], i[i$supp == "VC", 1], paired = FALSE)$conf.int[1:2]
}
int.table <- data.frame()
dim(int.table) <- c(0, 2)
int.table <- rbind(int.table,
t.test(a[a$supp == "OJ", 1],
a[a$supp == "VC", 1])$conf.int[1:2]
int.table <- data.frame()
dim(int.table) <- c(0, 2)
int.table <- rbind(int.table,
t.test(a[a$supp == "OJ", 1],
a[a$supp == "VC", 1])$conf.int[1:2])
int.table
int.table <- data.frame()
dim(int.table) <- c(0, 2)
int.table <- rbind(int.table,
t.test(a[a$supp == "OJ", 1],
a[a$supp == "VC", 1])$conf.int[1:2],
t.test(b[b$supp == "OJ", 1],
b[b$supp == "VC", 1])$conf.int[1:2],
t.test(c[c$supp == "OJ", 1],
c[c$supp == "VC", 1])$conf.int[1:2],
)
a <- ToothGrowth[ToothGrowth$dose == 0.5, ]
b <- ToothGrowth[ToothGrowth$dose == 1, ]
c <- ToothGrowth[ToothGrowth$dose == 2, ]
t.test(b$len, a$len)
t.test(c$len, b$len)
int.table <- data.frame()
dim(int.table) <- c(0, 2)
int.table <- rbind(int.table,
t.test(a[a$supp == "OJ", 1],
a[a$supp == "VC", 1])$conf.int[1:2],
t.test(b[b$supp == "OJ", 1],
b[b$supp == "VC", 1])$conf.int[1:2],
t.test(c[c$supp == "OJ", 1],
c[c$supp == "VC", 1])$conf.int[1:2],
)
t.test(a[a$supp == "OJ", 1],
a[a$supp == "VC", 1])$conf.int[1:2]
t.test(b[b$supp == "OJ", 1],
b[b$supp == "VC", 1])$conf.int[1:2]
t.test(c[c$supp == "OJ", 1],
c[c$supp == "VC", 1])$conf.int[1:2]
t.test(a[a$supp == "OJ", 1],
a[a$supp == "VC", 1])$conf.int[1:2]
t.test(b[b$supp == "OJ", 1],
b[b$supp == "VC", 1])$conf.int[1:2]
int.table <- data.frame()
dim(int.table) <- c(0, 2)
int.table <- rbind(int.table,
t.test(a[a$supp == "OJ", 1],
a[a$supp == "VC", 1])$conf.int[1:2],
t.test(b[b$supp == "OJ", 1],
b[b$supp == "VC", 1])$conf.int[1:2],
t.test(c[c$supp == "OJ", 1],
c[c$supp == "VC", 1])$conf.int[1:2]
)
int.table
col.names(int.table) <- c(0.025, 0.975)
?colnames
colnames(int.table) <- c(0.025, 0.975)
int.table
rownames(int.table) <- c("dose==0.5", "dose==1", "dose==2")
int.table
ggplot(ToothGrowth, aes(y = len, x = factor(dose))) +
geom_boxplot() +
geom_jitter()
int.table
mean(a[a$supp == "OJ", 1])
mean(a[a$supp == "VC", 1])
?t.test
t.test(c[c$supp == "OJ", 1],
c[c$supp == "VC", 1], var.equal = TRUE)
?ToothGrowth
require(ggplot2)
figA <- ggplot(data = ToothGrowth, aes(y = len, x = dose, color = supp)) +
labs(x = "Dose (mg)", y = "Length (mm)", color = "Supplement") +
geom_point(size = 5, alpha = 0.75)
figA
?t.test
q1 <- matrix(c(140, 138, 150, 148,135,132,135,151,146,130),5,2)
q1
t.test(q1[,1], q1[,2], paired = TRUE)
?qt
qt(.975, 8)
mu + c(,-1,1) * qt(.975, 8) * sigma / sqrt(n)
mu <- 1100
sigma <- 30
n <- 9
mu + c(,-1,1) * qt(.975, 8) * sigma / sqrt(n)
mu + c(-1,1) * qt(.975, 8) * sigma / sqrt(n)
qt(.975, 8) * sigma / sqrt(n)
qt(.025, 8)
qt(.5, 8)
q3 <- c(1,1,1,0)
t.test(q3)
?t.test
t.test(q3, alternative = "greater")
t.test(q3, alternative = "greater", mu = 0.5)
t.test(q3, alternative = "greater", mu = 0.5, lower.tail = FALSE)
t.test(q3, alternative = "greater", mu = 0.5, lower.tail = T)
?qt
qt(10/1787, 1786)
?qpois
ppois(.95, .01)
ppois(10/1787, .01)
ppois(10/1787, .01, lower.tail = F)
10/1787
?pt
pt(.11, 9)
pt(.11, 1787)
?t.test
-3 - 1
8(1.5^2)
(8 * 1.5^2 + 8 * 1.8 ^ 2) / 16
Sp <- (8 * 1.5^2 + 8 * 1.8 ^ 2) / 16
sqrt(Sp)
?qt
qt(.95, 16)
qt(c(.9, .95, .99), 16)
qt(c(.9, .95, .99), 16) * sqrt(Sp)
?power.t.test
power.t.test(100, .01, .04, alternative = "one.sided")
power.t.test(1000000, .01, .04, alternative = "one.sided")
power.t.test(delta = .01, sd = .04, power = .9)
power.t.test(delta = .01, sd = .04, power = .9, alternative = "one.sided")
power.t.test(100, -0.01, .04, alternative = "one.sided")
power.t.test(100, 01, .04, alternative = "one.sided")
power.t.test(100, .01, .04, alternative = "one.sided")
power.t.test(100, -0.01, .04, alternative = "one.sided")
power.t.test(100, -0.01, .04, alternative = "one.sided", lower.tail = F)
power.t.test(delta = -.01, sd = .04, power = .9, alternative = "one.sided")
power.t.test(delta = -0.01, sd = .04, power = .9, alternative = "one.sided")
power.t.test(100, .01, .04, alternative = "one.sided")
power.t.test(delta = -0.01, sd = .04, power = .9, alternative = "one.sided")
power.t.test(delta = .01, sd = .04, power = .9, alternative = "one.sided")
power.t.test(delta = .01, sd = .04, power = .95, alternative = "one.sided")
power.t.test(delta = .01, sd = .04, power = .9, alternative = "one.sided")
power.t.test(delta = .01, sd = .04, power = .9, alternative = "two.sided")
q3 <- c(1,1,1,0)
t.test(q3, alternative = "greater", mu = 0.5, lower.tail = T)
?t.test
1-t.test(q3, alternative = "greater", mu = 0.5, lower.tail = T)
1 - t.test(q3, alternative = "greater", mu = 0.5, lower.tail = T)
q3 <- c(1,0,0,0)
t.test(q3, alternative = "greater", mu = 0.5, lower.tail = T)
q3 <- c(1,1,1,0)
t.test(q3, alternative = "greater", mu = 0.5, lower.tail = T)
?qt
?fisher.test
?pois.test
?rpois
?rpois.test
?pois.test
qpois(.11, .1)
qpois(.11, .01)
qpois(.52, .01)
diff <- .01 - 10 / 1787
diff
qpois(diff, .01)
ppois(diff, .01)
ppois(diff, .01, lower.tail = F)
power.t.test(delta = .01, sd = .04, power = .9, alternative = "one.sided")
Sp <- (8 * 1.5^2 + 8 * 1.8 ^ 2) / 16
sqrt(Sp)
qt(c(.9, .95, .99), 16) * sqrt(Sp)
1-qt(c(.9, .95, .99), 16) * sqrt(Sp)
ppois(10, .01 * 1787)
?abs
power <- pnorm(.01 + qnorm(.95) * .04, mean = 11, sd = .04, lower.tail = FALSE)
power
power <- pnorm(.01 + qnorm(.95) * .04, mean = .01, sd = .04, lower.tail = FALSE)
power
power <- pnorm(-0.01 - qnorm(.95) * .04, mean = .01, sd = .04, lower.tail = FALSE)
power
power <- pnorm(-0.01 - qnorm(.95) * .04, mean = -0.01, sd = .04, lower.tail = FALSE)
power
library(swirl)
install_from_swirl("Statistical Inference")
install_from_swirl("Regression Models")
swirl()
pt(q=2.5,df=15)
pt(2.5,15, lower.tail=F)
pt(2.5,15, lower.tail=FALSE)
qnorm(2)
qnorm(.95)
qnorm(.99)
pnorm(2)
pnorm(2, FALSE)
pnorm(2, lower.tail=FALSE)
mybin
pbinom(6, si=8, prob=.5, lower.tail=FALSE)
pbinom(7,si=8, prob=.5, lower.tail = TRUE)
ppois(9, 5, lower.tail=FALSE)
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z <- qnorm(.95)
pnorm(30+z, mean=30, lower.tail=FALSE)
pnorm(30+z,mean=32, lower.tail=FALSE)
pnorm(30+z, mean=32, sd=1, lower.tail=FALSE)
pnorm(30+z*2, mean=32, sd=2, lower.tail=FALSE)
bye()
swirl()
swirl()
swirl()
swirl()
ravenData
mdl <- glm(ravenWinNum ~ ravenScore, "binomial", ravenData)
lodds <- predict(mdl, data.frame(ravenScore=c(0,3,6)))
lodds
exp(lodds)/(1+exp(lodds))
summary(mdl)
confint(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95,1)
library(MASS)
?shuttle
head(shuttle)
tail(shuttle)
?glm
shuttle2 <- shuttle
shuttle2[,7=="auto"] <- 1
head(shuttle2)
str(shuttle)
fit1 <- glm(auto ~ wind, "binomial", data = shuttle)
fit1 <- glm(shuttle$auto ~ shuttle$wind, "binomial")
?dplyr
library(dplyr)
?dplyr
head(shuttle)
fit1 <- glm(shuttle$use ~ shuttle$wind, "binomial")
summary(fit1)
library(ggplot)
library(ggplot2)
qplot(fit1)
qplot(fit1)
?geom_smooth
qplot(y=use, x=wind, data=shuttle)
head(shuttle)
summary(fit1)
tail(shuttle)
shuttle2$use[shuttle2$use == "noauto"] <- 0
shuttle2$use[shuttle2$use == "auto"] <- 1
shuttle2$use[shuttle2$use == "noauto"]
head(shuttle2)
shuttle2 <- shuttle
head(shuttle2)
shuttle2$use[shuttle2$use == "noauto"] <- 0
head(shuttle2)
tail(shuttle2)
shuttle2 <- shuttle
shuttle2$use <- as.character(shuttle2$use)
str(shuttle2)
shuttle2$use[shuttle2$use == "noauto"] <- 0
shuttle2$use[shuttle2$use == "auto"] <- 1
str(shuttle2)
shuttle2$use <- as.factor(shuttle2$use)
str(shuttle2)
head(shuttle2)
shuttle2 <- shuttle
shuttle2$use <- as.character(shuttle2$use)
shuttle2$use[shuttle2$use == "noauto"] <- 0
shuttle2$use[shuttle2$use == "auto"] <- 1
shuttle2$use <- as.factor(shuttle2$use)
str(shuttle2)
head(shuttle2)
tail(shuttle2)
fit1 <- glm(shuttle2$use ~ shuttle2$wind, "binomial")
summary(fit1)
exp(fit1$coefficients)
fit1$coefficients
fit2 <- glm(shuttle2$use ~ shuttle2$wind + shuttle2$magn, "binomial")
summary(fit2)
exp(fit2$coefficients)
1/1.0326
exp(fit1$coefficients)
1/1.032323
fit3 <- glm(1- shuttle2$use ~ shuttle2$wind, "binomial")
fit3 <- glm(1 - shuttle2$use ~ shuttle2$wind, "binomial")
shuttle$useInv <- 1-shuttle$use
shuttle2$use <- as.numeric(shuttle2$use)
shuttle$useInv <- 1-shuttle$use
str(shuttle)
shuttle2
shuttle2$useInv <- 1-shuttle2$use
fit3 <- glm(1 - shuttle2$useInv ~ shuttle2$wind, "binomial")
fit3 <- glm(shuttle2$useInv ~ shuttle2$wind, "binomial")
shuttle2
shuttle2 <- shuttle
shuttle2$use <- as.character(shuttle2$use)
shuttle2$use[shuttle2$use == "noauto"] <- 0
shuttle2$use[shuttle2$use == "auto"] <- 1
shuttle2$use <- as.factor(shuttle2$use)
fit1 <- glm(shuttle2$use ~ shuttle2$wind, "binomial")
summary(fit1)
exp(fit1$coefficients)
#q2
fit2 <- glm(shuttle2$use ~ shuttle2$wind + shuttle2$magn, "binomial")
exp(fit2$coefficients)
shuttle2$use <- as.numeric(shuttle2$use)
shuttle2$useInv <- 1-shuttle2$use
shuttle2
shuttle2 <- shuttle
shuttle2$use <- as.character(shuttle2$use)
shuttle2$use[shuttle2$use == "noauto"] <- 0
shuttle2$use[shuttle2$use == "auto"] <- 1
shuttle2$use <- as.factor(shuttle2$use)
fit1 <- glm(shuttle2$use ~ shuttle2$wind, "binomial")
summary(fit1)
exp(fit1$coefficients)
#q2
fit2 <- glm(shuttle2$use ~ shuttle2$wind + shuttle2$magn, "binomial")
exp(fit2$coefficients)
shuttle2
shuttle2$useInv <- 1-shuttle2$use
shuttle2
shuttle2$use <- as.numeric(shuttle2$use)
shuttle2
shuttle2 <- shuttle
shuttle2$use <- as.character(shuttle2$use)
shuttle2$use[shuttle2$use == "noauto"] <- 0
shuttle2$use[shuttle2$use == "auto"] <- 1
shuttle2$use <- as.numeric(shuttle2$use)
shuttle2 <- shuttle
shuttle2$use <- as.character(shuttle2$use)
shuttle2$use[shuttle2$use == "noauto"] <- 0
shuttle2$use[shuttle2$use == "auto"] <- 1
shuttle2$use <- as.numeric(shuttle2$use)
shuttle2
fit3 <- glm(1-shuttle2$useInv ~ shuttle2$wind, "binomial")
shuttle2$use <- 1 - shuttle2$use
shuttle2
fit3 <- glm(shuttle2$use ~ shuttle2$wind, "binomial")
summary(fit3)
summary(fit2)
summary(fit3)
summary(fit)
summary(fit1)
?InsectSprays
head(InsectSprays)
fit4 <- glm(count~spray, "poisson", data = InsectSprays)
summary(fit4)
exp(fit4$coeff)
exp(fit4$coeff)[2]
1/exp(fit4$coeff)[2]
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
qplot(x,y)
n <- 500; x <- seq(0, 4 * pi, length = n); y <- sin(x) + rnorm(n, sd = .3)
knots <- seq(0, 8 * pi, length = 20);
splineTerms <- sapply(knots, function(knot) (x > knot) * (x - knot))
xMat <- cbind(1, x, splineTerms)
yhat <- predict(lm(y ~ xMat - 1))
plot(x, y, frame = FALSE, pch = 21, bg = "lightblue", cex = 2)
lines(x, yhat, col = "red", lwd = 2)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
knots
knots <- c(-5, 0,5)
splineTerms <- sapply(knots, function(knot) (x > knot) * (x - knot))
splineTerms
knots <- c(-5, 0,5)
splineTerms <- sapply(knots, function(knot) (x > knot) * (x - knot))
splineTerms
#q6
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
knots <- c(-5, 0,5)
splineTerms <- sapply(knots, function(knot) (x > knot) * (x - knot))
yhat <- predict(lm(y ~ xMat - 1))
plot(x, y, frame = FALSE, pch = 21, bg = "lightblue", cex = 2)
lines(x, yhat, col = "red", lwd = 2)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
knots <- c(-5, 0,5)
splineTerms <- sapply(knots, function(knot) (x > knot) * (x - knot))
xMat <- cbind(1, x, splineTerms)
yhat <- predict(lm(y ~ xMat - 1))
plot(x, y, frame = FALSE, pch = 21, bg = "lightblue", cex = 2)
lines(x, yhat, col = "red", lwd = 2)
xMat
yhat <- predict(lm(y ~ xMat ))
plot(x, y, frame = FALSE, pch = 21, bg = "lightblue", cex = 2)
lines(x, yhat, col = "red", lwd = 2)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
knots <- c(-5, 0,5)
splineTerms <- sapply(knots, function(knot) (x > knot) * (x - knot))
xMat <- cbind(1, x, splineTerms)
fit6 <- lm(y ~ xMat)
yhat <- predict(fit6)
plot(x, y, frame = FALSE, pch = 21, bg = "lightblue", cex = 2)
lines(x, yhat, col = "red", lwd = 2)
summary(fit6)
swirl()
library(swirl)
swirl()
help("Sweave", package="utils")
?group_by
library(dplyr)
?group_by
a=1
b=2
f<-function(a,b)
{
return( function(x) {
a*x + b
})
}
g=f(2,1)
g
g(2)
df <- data.frame(a=1:4, e=4:1)
df
nms <- c("a", "b", "d", "e")
nms
Missing <- setdiff(nms, names(df))
df[Missing] <- 0                    # Add them, filled with '0's
df <- df[nms]
df
?seq
subjectID <- seq(1,10)
gender <- rep("female", 10)
department <- c(rep("Soc", 5), rep("Bio", 5))
data1 <- data.frame(subjectID, gender, dept, age)
data1 <- data.frame(subjectID, gender, department, age)
age <- rep(22, 10)
data1 <- data.frame(subjectID, gender, department, age)
view(data1)
View(data1)
summary(data1)
sum_na <-function(x){sum(is.na(x))}
sum_not_na <- function(x){sum(!is.na(x))}
citation()
citation("dplyr")
version
setwd("~/Google Drive/web site/blog/numbers to letters")
head(iris)
iris$Species <- as.integer(iris$Species)
head(iris)
read.csv("temp.csv")
temp <- read.csv("temp.csv")
require(dplyr)
colnames(temp)
temp <- select(New.ID, option, option_code)
temp <- select(temp, New.ID, option, option_code)
head(temp)
temp[1:30,]
temp <- filter(temp, New.ID==f8300|New.ID==f8500")
temp <- filter(temp, New.ID==f8300|New.ID==f8500)
temp <- filter(temp, New.ID=="f8300"|New.ID=="f8500")
temp
temp$nchar <- nchar(temp$option)
sapply(temp$option, nchar)
temp$nchar <- nchar(as.character(temp$option))
head(temp)
temp <- filter(temp, nchar <40)
head(temp)
?rename
temp <- rename(temp, new_id = New.ID)
temp
str(temp)
temp <- select(temp, new_id, option, option_code)
temp
?write.csv
write.csv(temp, "response_options.csv", row.names = F)
response_options$option_letter <- letters[response_options$option_code]
response_options <- read.csv("response_options.csv")
response_options$option_letter <- letters[response_options$option_code]
head(response_options)
response_options <- read.csv("response_options.csv")
head(response_options)
